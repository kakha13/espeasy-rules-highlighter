{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "ESPEasy Rules",
    "patterns": [
        { "include": "#comments" },
        { "include": "#events" },
        { "include": "#commands" },
        { "include": "#keywords" },
        { "include": "#variables" },
        { "include": "#strings" },
        { "include": "#numbers" }
    ],
    "repository": {
        "comments": {
            "name": "comment.line.double-slash.espeasy-rules",
            "begin": "//",
            "end": "$"
        },
        "events": {
            "name": "entity.name.function.espeasy-rules",
            "match": "(?i)^\\s*(On)\\s+(\\w+#\\w+|\\w+)\\s+(do)\\b",
            "captures": {
                "1": { "name": "keyword.control.espeasy-rules" },
                "2": { "name": "entity.name.type.espeasy-rules" },
                "3": { "name": "keyword.control.espeasy-rules" }
            }
        },
        "commands": {
            "name": "keyword.other.espeasy-rules",
            "match": "(?i)\\b(endon|asyncevent|publish|timerset|looptimerset|if|else|elseif|endif|let|taskrun|taskvalueset|gpio|longpulse|name|unit|wifissid|wifikey|save|logentry|sendtohttp|reboot)\\b"
        },
        "keywords": {
            "name": "keyword.control.espeasy-rules",
            "match": "\\b(on|do|endon)\\b"
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.other.espeasy-rules",
                    "match": "%([a-zA-Z0-9_]+)%"
                },
                {
                    "name": "variable.other.espeasy-rules",
                    "match": "\\[(\\w+)#(\\w+)\\]",
                    "captures": {
                        "1": { "name": "support.class.espeasy-rules" },
                        "2": { "name": "support.variable.espeasy-rules" }
                    }
                }
            ]
        },
        "strings": {
            "name": "string.quoted.double.espeasy-rules",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.espeasy-rules",
                    "match": "\\\\."
                }
            ]
        },
        "numbers": {
            "name": "constant.numeric.espeasy-rules",
            "match": "\\b[0-9]+\\b"
        }
    },
    "scopeName": "source.espeasy-rules"
}
